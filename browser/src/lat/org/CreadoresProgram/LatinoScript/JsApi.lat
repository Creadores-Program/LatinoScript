funcion JsObject(code)
    mi = {
        "procesar": funcion ()
            escribir("%jsContext%" .. mi.codigo .. ";")
        fin,
        "llamar": funcion (fuci, args)
            subCodigo = mi.codigo .. "." .. fuci
            subargs = acadena(args)
            subargs[0] = "("
            subargs[cadena.longitud(subargs) - 1] = ")"
            subCodigo = subCodigo .. subargs
            retorno JsObject(subCodigo)
        fin,
        "obtener": funcion (fuci, args)
            funcion Convertir(resultado)
                ret cadena.ejecutar("ret " .. resultado)
            fin
            si (args == nulo)
                escribir("%jsContext%%get%".. mi.codigo .. "." .. fuci)
                resultado = leer()
                ret Convertir(resultado)
            sino
                subargs = acadena(args)
                subargs[0] = "("
                subargs[cadena.longitud(subargs) - 1] = ")"
                escribir("%jsContext%%get%" .. mi.codigo .. "." .. fuci .. "(".. subargs ..");")
                resultado = leer()
                ret Convertir(resultado)
            fin
        fin
    }
    mi.codigo = code
    retorno mi
fin
global JsContext = {
    "window": JsObject("window"),
    "document": JsObject("document"),
    "InstanciaLatino": JsObject("InstanciaLatino")
}
funcion evalJS(evalJSLatList)
    strevalLatJS = ""
    desde (i = 0; i < lista.longitud(evalJSLatList); i++)
        strevalLatJS = strevalLatJS .. "." .. evalJSLatList[i][0]
        si (evalJSLatList[i][1] != nulo)
            subargs = acadena(evalJSLatList[i][1])
            subargs[0] = "("
            subargs[cadena.longitud(subargs) - 1] = ")"
            strevalLatJS = strevalLatJS .. subargs
        fin
    fin
    escribir("%jsContext%" .. strevalLatJS .. ";")
fin
funcion getJS(evalJSLatList)
    strevalLatJS = ""
    desde (i = 0; i < lista.longitud(evalJSLatList); i++)
        strevalLatJS = strevalLatJS .. "." .. evalJSLatList[i][0]
        si (evalJSLatList[i][1] != nulo)
            subargs = acadena(evalJSLatList[i][1])
            subargs[0] = "("
            subargs[cadena.longitud(subargs) - 1] = ")"
            strevalLatJS = strevalLatJS .. subargs
        fin
    fin
    escribir("%jsContext%%get%" .. strevalLatJS .. ";")
    resultadoLatJsObj = leer()
    ret cadena.ejecutar("ret " .. resultadoLatJsObj)
fin